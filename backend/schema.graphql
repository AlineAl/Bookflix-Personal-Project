### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Book {
  author: String!
  body: String!
  createdAt: DateTime!
  date: Int!
  genre: String!
  id: Int!
  likers: [User!]!
  postedBy: User
  title: String!
  url: String!
}

input BookOrderByInput {
  author: Sort
  createdAt: Sort
  title: Sort
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Feed {
  books: [Book!]!
  count: Int!
}

type Like {
  book: Book!
  user: User!
}

type Mutation {
  createBook(author: String!, body: String!, date: Int!, genre: String!, title: String!, url: String!): Book!
  deleteBook(id: Int!): Book!
  like(bookId: Int!): Like
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, password: String!, username: String!): AuthPayload!
  updateBook(author: String, body: String, date: Int, genre: String, id: Int!, title: String, url: String): Book!
}

type Query {
  book(id: Int!): Book
  feed(filter: String, orderBy: [BookOrderByInput!], skip: Int, take: Int): Feed!
}

enum Sort {
  asc
  desc
}

type User {
  books: [Book!]!
  email: String!
  id: Int!
  likes: [Book!]!
  password: String!
  username: String!
}
